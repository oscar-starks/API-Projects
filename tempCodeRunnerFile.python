<<<<<<< HEAD
# from datetime import datetime
# def days_between(d1, d2):
#     d1 = datetime.strptime(d1, "%Y-%m-%d")
#     d2 = datetime.strptime(d2, "%Y-%m-%d")
#     print (abs((d2 - d1).days))

# jan_1_2020 = datetime.datetime(2020, 1, 1)
# dec_12_2020 = datetime.datetime(2020, 12, 12)

# days_between(jan_1_2020, dec_12_2020)
import datetime

jan_1_2020 = datetime.datetime(2020, 1, 1)
dec_12_2020 = datetime.datetime(2020, 12, 12)

if jan_1_2020 < dec_12_2020:
    answer = dec_12_2020-jan_1_2020
    print(answer.days)
=======
def decorator(function):
    def inner(*args):
        print("hello")
        returned_val = function(*args)
        return returned_val
    
    return inner

@decorator
def sum(a, b):
    return a+b

print(sum(2,4))
# print(sum("min"))

# def myFun(arg1, arg2, arg3):
#     print("arg1:", arg1)
#     print("arg2:", arg2)
#     print("arg3:", arg3)
 
 
# # Now we can use *args or **kwargs to
# # pass arguments to this function :
# args = ("Geeks", "for", "Geeks")
# myFun(*args)
 
# kwargs = { "arg2": "for", "arg1": "Geeks", "arg3": "Geeks"}
# myFun(**kwargs)
>>>>>>> 7112d0df8ab42742379c9cb069ad82e42d47980c
